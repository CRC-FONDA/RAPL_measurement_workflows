docker {
    enabled = true
}

manifest {
   mainScript = 'main.nf'
}


/* strandedness must be either 'firststrand', 'secondstrand' or 'unstranded'
   aligner must be 'star', 'hisat2' or 'bowtie2'
*/
params {
   aligner = 'star'
   outdir = '/data/Simon_data/out'
   threads = 32
   baseDir = '/data/Simon_data/example-rnaseq-workflow'
   split = 2
   strandedness = 'secondstrand'
   reference = '/data/Simon_data/ncbi_dataset/ncbi_dataset/data/GCF_000001635.27/GCF_000001635.27_GRCm39_genomic.fna'
   gtf = '/data/Simon_data/ncbi_dataset/ncbi_dataset/data/GCF_000001635.27/genomic.gtf'
   read = '/data/Simon_data/SRR22707115.fastq'
}

process {
   withLabel:fastp {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      container = 'biocontainers/fastp:v0.20.1_cv1'
   }
   withLabel:star {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage/*memory = '8.5 GB'*/
      container = 'nfcore/rnaseq:1.4.2'
   }
   withLabel:samtools {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      container = 'biocontainers/samtools:v1.7.0_cv4'
   }
   withLabel:cufflinks {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      container = 'pgcbioinfo/cufflinks:2.2.1'
   }
   withLabel:python {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      container = 'amancevice/pandas:jupyter-2.2.2'
   }
   withLabel:bowtie2 {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      /*container = 'biocontainers/bowtie2:v2.3.4.3-1-deb_cv2'*/
      container = 'nanozoo/bowtie2'
   }
   withLabel:hisat2 {
      //memory = '80.5 GB' //Test to avoid out-of-memory error for ephemeral storage
      container = 'nanozoo/hisat2:2.1.0--66dae66'
   }

}

docker {
   enabled = true
}

process.executor = 'k8s'
process.scratch = true
process.pod.nodeSelector = 'usedby=thammphi'
k8s.pod.nodeSelector = 'usedby=thammphi'

k8s {
    debug {
       yaml = true
    }
   namespace = 'thammphi'
   context = 'thammphi'
   runAsUser = 0
   storageClaimName = 'thammphi-pvc'
   storageMountPath = '/data'
   fetchNodeName = true
}

trace {
   enabled = true
   file = 'exp_shtest_trace_run'
   fields = 'task_id, hash, native_id, process, tag, name, hostname, status, exit, module, container, cpus, time, disk, memory, attempt, submit, start, complete, duration, realtime, queue, %cpu, %mem, rss, vmem, peak_rss, peak_vmem, rchar, wchar, syscr, syscw, read_bytes, write_bytes, vol_ctxt, inv_ctxt, env, workdir, script, scratch, error_action'
}

report {
   enabled = true
   file = 'exp_shtest_report.html'
}
